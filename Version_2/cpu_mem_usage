# -*- coding: utf-8 -*-

import time

import psutil

import sys

import datetime



'''

    Realtime CPU and Memory Monitoring

    to run use "Python .\cpu.py > cpu.txt" for windows

    to run use "Python ./cpu.py > cpu.txt" for linux

'''





def cpu_usage(cpu_usage, mem_usage, bars=50):

    time = datetime.datetime.now().strftime("%Y%m%d - %H:%M:%S")

    cpu_percent = (cpu_usage / 100.0)  # monitors cpu usage



    # cpu_bar = '█' * int(cpu_percent * bars) + '-' * (bars - int(cpu_percent * bars))



    mem_percent = (mem_usage / 100.0)  # monitors cpu usage



    # mem_bar = '█' * int(mem_percent * bars) + '-' * (bars - int(mem_percent * bars))

    # sys.stdout = open("1.txt", "wt")

    print(f"\r CPU Usage: {cpu_usage:.2f}%", end="" " -------------")

    print(f" Memory Usage: {mem_usage:.2f}%", {time}, end="\r")







while True: # while until we ends

    cpu_usage(psutil.cpu_percent(), psutil.virtual_memory().percent, 30)

    time.sleep(0.2) # time gap
